package BusinessRules.sandbox;

/*Generated by MPS */


public class map_Rule {
  protected static Object[] From(int NumberOfSettlementDays, int LotDaysSincePurchase, int TransactionLotReceivablesUsed, int AccountProFormaCashAvailable) {
    // Free Riding Violation test and update of cash available
    // If settled or sufficient cash to fund purchase
    if (LotDaysSincePurchase >= NumberOfSettlementDays || AccountProFormaCashAvailable >= TransactionLotReceivablesUsed) {
      return new Object[]{false, AccountProFormaCashAvailable - TransactionLotReceivablesUsed};
    }
    // Otherwise, report violation
    return new Object[]{true};
  }

  public static void main(String[] args) {
    System.out.println("Running tests...");
    test(sameAs(new Object[]{true}, From(2, 2, 100, 125)));
    test(sameAs(new Object[]{false, 25}, From(2, 1, 100, 125)));
  }
  private static boolean sameAs(Object[] a, Object[] b) {
    if (a.length != b.length) {
      return false;
    }
    int i = 0;
    for (; i < a.length; i = i + 1) {
      if (!(a[i].equals(b[i]))) {
        return false;
      }
    }
    return true;
  }
  private static void test(boolean b) {
    if (b) {
      System.out.println("Test succeeded.");
    } else {
      System.out.println("Test failed");
    }
  }
}
